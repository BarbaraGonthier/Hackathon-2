{% extends 'base.html.twig' %}
{% block title %}Notre communauté{% endblock %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.7.1/dist/leaflet.css"
          integrity="sha512-xodZBNTC5n17Xt2atTPuE1HxjVMSvLVW9ocqUKLsCC5CXdbqCmblAshOMAS6/keqq/sMZMZ19scR4PsZChSR7A=="
          crossorigin=""/>
{% endblock %}
{% block body %}
    <div class="container-fluid mt-3">
        <div class="filters">
            <h1 class="mb-3 h4">Recherchez nos membres </h1>
            {{ form_start(form) }}
            {{ form_row(form.role) }}
            <div class="mb-3">
                {{ form_label(form.department, 'Département') }} {{ form_widget(form.department)}}
            </div>
            <input type='submit' class="btn btn-success btn-small" value='Filtrer'>
            <input type="reset" class="btn btn-secondary btn-small"  value="Réinitialiser">
            {{ form_end(form) }}
        </div>
        <div class="infosMobile" id="infos"></div>
        <div id="map"></div>
    </div>
{% endblock %}
{% block javascripts %}
    {{ parent() }}
    <script src="https://unpkg.com/leaflet@1.7.1/dist/leaflet.js"
            integrity="sha512-XQoYMqMTK8LvdxXYG3nZ448hOEQiglfqkJs1NOQV44cWnUrBc8PkAOcXy20w0vlaXaVUearIOBhiXZ5V3ynxwA=="
            crossorigin="">
    </script>
    <script>
        let map = L.map('map').setView([46.920592, 1.968988], 7);
        let redIcon = new L.Icon({
            iconUrl: 'https://raw.githubusercontent.com/pointhi/leaflet-color-markers/master/img/marker-icon-2x-red.png',
            shadowUrl: 'https://cdnjs.cloudflare.com/ajax/libs/leaflet/0.7.7/images/marker-shadow.png',
            iconSize: [25, 41],
            iconAnchor: [12, 41],
            popupAnchor: [1, -34],
            shadowSize: [41, 41]
        });
        L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {
            maxZoom: 14,
            attribution: 'Map data &copy; <a href="https://www.openstreetmap.org/copyright">OpenStreetMap</a> contributors, ' +
                'Imagery © <a href="https://www.mapbox.com/">Mapbox</a>',
            id: 'mapbox/streets-v11',
            tileSize: 512,
            zoomOffset: -1
        }).addTo(map);
        function onLocationFound(e) {
            let radius = e.accuracy / 2;
            L.marker(e.latlng,  {icon: redIcon}).addTo(map)
                .bindPopup("You are within " + radius + " meters from this point").openPopup();
            L.circle(e.latlng, radius).addTo(map);
        }
        function onLocationError(e) {
            alert(e.message);
        }
        map.on('locationfound', onLocationFound);
        map.on('locationerror', onLocationError);
        map.locate({setView: true, maxZoom: 16});
        let greenIcon = L.icon({
            iconUrl: '{{ asset('build/CA-logo.png') }}',
            iconSize:     [52, 52], // size of the icon
            iconAnchor:   [25, 51], // point of the icon which will correspond to marker's location
            popupAnchor:  [-6, -48] // point from which the popup should open relative to the iconAnchor
        });
        {% if display == 'farmers' %}
        {% for farmer in farmers %}
        {% for farmerCity in farmersCity %}
        {% if farmer.id == farmerCity.id %}
        let marker{{ loop.index }} = L.marker([{{ farmerCity.latitude }}, {{ farmerCity.longitude }}], { icon: greenIcon }).addTo(map);
        marker{{ loop.index }}.bindPopup('<button class="btn" ' +
            'onclick="displayInfos(' +
            '\'{{ farmerCity.name|lower|capitalize }}\', \'{{ farmer.farmSize }}\', \'test\')">' +
            '{{ farmerCity.name }} : {{ farmerCity.total }}</button>').openPopup();
        {% endif %}
        {% endfor %}
        {% endfor %}
        {% elseif display == 'buyers' %}
        {% for buyer in buyers %}
        let logoIcon{{ loop.index }} = L.icon({
            iconUrl: '{{ buyer.logo }}',
            iconSize:     [40, 40], // size of the icon
            iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
            popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
        })
        let markerBuyer{{ loop.index }} = L.marker([{{ buyer.latitude }}, {{ buyer.longitude }}], {icon : logoIcon{{ loop.index }}}).addTo(map);
        markerBuyer{{ loop.index }}.bindPopup("<b>{{ buyer.lastname }}<b> - {{ buyer.name }} ({{buyer.zipcode}}) : {{ buyer.type }}").openPopup();
        {% endfor %}
        {% else %}
        {% for farmer in farmers %}
        {% for farmerCity in farmersCity %}
        {% if farmer.id == farmerCity.id %}
        let marker{{ loop.index }} = L.marker([{{ farmerCity.latitude }}, {{ farmerCity.longitude }}], { icon: greenIcon }).addTo(map);
        marker{{ loop.index }}.bindPopup('<button class="btn" ' +
            'onclick="displayInfos(' +
            '\'{{ farmerCity.name|lower|capitalize }}\', \'{{ farmer.farmSize }}\', \'test\')">' +
            '{{ farmerCity.name }} : {{ farmerCity.total }}</button>').openPopup();
        {% endif %}
        {% endfor %}
        {% endfor %}
        {% for buyer in buyers %}
        let logoIconBuyer{{ loop.index }} = L.icon({
            iconUrl: '{{ buyer.logo }}',
            iconSize:     [40, 40], // size of the icon
            iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location
            popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor
        })
        let markerBuyer{{ loop.index }} = L.marker([{{ buyer.latitude }}, {{ buyer.longitude }}], {icon : logoIconBuyer{{ loop.index }}}).addTo(map);
        markerBuyer{{ loop.index }}.bindPopup("<b>{{ buyer.lastname }}<b> - {{ buyer.name }} ({{buyer.zipcode}}) : {{ buyer.type }}").openPopup();
        {% endfor %}
        {% endif %}
    </script>

    <script>
        function displayInfos(city, farmSize, average) {
            document.getElementById("infos").style.display = "block";
            let closeButton = document.createElement("button");
            closeButton.className = "close";
            closeButton.type = "button";
            closeButton.addEventListener("click", function (){
                document.getElementById('infos').innerHTML = '';
                document.getElementById('infos').style.display='none'
            })
            closeButton.textContent = "X";
            document.getElementById("infos").appendChild(closeButton);

            let h1 = document.createElement("h1");
            h1.className = "text-center my-3";
            let title = document.createTextNode(city);
            h1.appendChild(title);
            document.getElementById("infos").appendChild(h1);

            let div1 = document.createElement("div");
            let content = document.createTextNode("Taille de la ferme : " + farmSize + "ha");
            div1.appendChild(content);
            document.getElementById("infos").appendChild(div1);
            console.log(average);
        }
    </script>
{% endblock %}